(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{242:function(e,t,o){},243:function(e,t,o){"use strict";var n=o(242);o.n(n).a},244:function(e,t,o){"use strict";var n=o(0).default.extend({props:{to:{type:String,default:""}}}),r=(o(243),o(2)),component=Object(r.a)(n,(function(){var e=this.$createElement,t=this._self._c||e;return t("transition",{attrs:{name:"fade--dialog"}},[this.to?t("nuxt-link",{staticClass:"back-button mdc-button mdc-button--outlined",attrs:{to:this.to}},[this._v("Go back")]):this._e()],1)}),[],!1,null,"3696cb87",null);t.a=component.exports},248:function(e,t,o){},536:function(e,t,o){"use strict";var n=o(248);o.n(n).a},559:function(e,t,o){"use strict";o.r(t);var n=o(0),r=o(244),c=n.default.extend({components:{BackButton:r.a},data:function(){return{customGameCode:"WNSY6",copyCustomGameCodeSuccedeed:!1,copyCustomGameCodeFailed:!1}},methods:{copyCustomGameCode:function(){var e=this;navigator.clipboard?navigator.clipboard.writeText(this.customGameCode).then((function(){e.copyCustomGameCodeSuccedeed=!0})).catch((function(){e.copyCustomGameCodeFailed=!0})):this.copyCustomGameCodeFailed=!0,setTimeout((function(){e.copyCustomGameCodeFailed=!1,e.copyCustomGameCodeSuccedeed=!1}),5e3)}},head:function(){return{title:"Custom Game"}}}),d=(o(536),o(2)),component=Object(d.a)(c,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("client-only",[o("m-layout-grid",[o("m-layout-grid-inner",[o("m-layout-grid-cell",{attrs:{span:12}},[o("m-card",{staticClass:"mdc-card--layout-gutter mdc-card--custom-game"},[o("m-card-media",{attrs:{"sixteen-nine":"",square:!1}}),e._v(" "),o("m-card-primary",{attrs:{title:"Compare boundaries of control points"}}),e._v(" "),o("m-card-secondary",[o("p",[e._v('\n              If you wish to compare the boundaries by yourself, check out this Custom Game! Every control point in\n              the game (except those from Arcade maps) has been manually "mapped" and is now surrounded by a "grapple\n              effect" that marks its more accurate bounds.\n            ')]),e._v(" "),o("p",[e._v("\n              After importing the code (which you can find on the bottom of this page) just select the map which\n              boundaries you would like to compare (from MAPS menu in Custom Game settings) and start the game!\n            ")]),e._v(" "),o("hr"),e._v(" "),o("p",[o("strong",[e._v("Do event maps have the same boundaries as the non-event ones?")])]),e._v(" "),o("p",[e._v("\n              Yes they do! I would add an option to generate bounds for these maps too but there are some technical\n              limitations in the Workshop that prohibit me from doing it.\n            ")]),e._v(" "),o("hr"),e._v(" "),o("p",[o("strong",[e._v("Have you also mapped the height of these boundaries?")])]),e._v(" "),o("p",[e._v("\n              Yes! I mean, kind of: mapping the exact boundaries of every control point in 3D space is almost\n              impossible to do, so basically I just added a purple orb which marks the height of the \"main\" part of\n              the hitbox, and with some new red orbs I've marked spots where the height of the rest of the hitbox is\n              lowered (so you can't contest the point from there).\n            ")]),e._v(" "),o("hr"),e._v(" "),o("p",[o("strong",[e._v("These purple spheres are lower than they should be...")])]),e._v(" "),o("p",[e._v("\n              Well, actually they are not! The detection in Overwatch is based on the centered point on player's feet,\n              which makes the detection very consistent (or inconsistent, depending on how you look at it) - it\n              doesn't matter if you're a Wrecking Ball or Tracer, only the center of your mass (but on your feet) must\n              be on the point so you can contest it. It's a shame that the actual boundaries aren't very accurate...\n            ")]),e._v(" "),o("hr"),e._v(" "),o("p",[o("strong",[e._v("What are these colorful spheres I can see on some maps?")])]),e._v(" "),o("ul",[o("li",[e._v('Purlple sphere - marks the height of the "main" part of detection hitbox.')]),e._v(" "),o("li",[e._v("Green sphere - spot where it's possible to contest the point")]),e._v(" "),o("li",[e._v("Red sphere - spot where it's not possible to contest the point.")])]),e._v(" "),o("p",[e._v("You can use the "),o("nuxt-link",{attrs:{to:"/compare"}},[e._v("Compare")]),e._v(" tool to learn more about them.")],1),e._v(" "),o("hr"),e._v(" "),o("p",[o("strong",[e._v("I can't see the boundaries of 2nd point in Assault mode!")])]),e._v(" "),o("p",[e._v("\n              To see these bounds, you have to capture the 1st point (just move yourself to Team 2, capture it and\n              move back to Team 1). This also requires the game mode to be started (should start automatically by\n              default).\n            ")])])],1)],1),e._v(" "),o("m-layout-grid-cell",{attrs:{span:12}},[o("m-card",{staticClass:"mdc-card--layout-gutter mdc-card--payload"},[o("div",{staticClass:"mdc-card__container"},[o("m-card-primary",{attrs:{title:"Find cool stall spots on payload maps"}}),e._v(" "),o("m-card-secondary",[o("p",[e._v("\n                Additionally I've added a big, yellow sphere around every payload in the game - according to my\n                \"research\" the detection radius of every payload equals to (about) 7 meters. So feel free to hop in\n                and find some interesting stall spots! Don't forget that contesting the payload requires you to have a\n                line of sight with it.\n              ")]),e._v(" "),o("hr"),e._v(" "),o("p",[o("strong",[e._v("Can I disable that sphere?")])]),e._v(" "),o("p",[e._v('\n                Yes you can! Just go to the Workshop and disable "Display sphere around the payload" rule.\n              ')])])],1),e._v(" "),o("m-card-media",{attrs:{"sixteen-nine":"",square:!1}})],1)],1),e._v(" "),o("m-layout-grid-cell",{attrs:{span:12}},[o("m-button",{staticClass:"button--copy-custom-game-code",attrs:{raised:"",title:"Press to copy the code to the clipboard",ripple:!1},on:{click:e.copyCustomGameCode}},[e._v("Custom Game code: "+e._s(e.customGameCode))])],1)],1),e._v(" "),o("m-snackbar",{attrs:{open:e.copyCustomGameCodeSuccedeed,"label-text":"Copied Custom Game code to the clipboard"}}),e._v(" "),o("m-snackbar",{attrs:{open:e.copyCustomGameCodeFailed,"label-text":"Failed to copy Custom Game code to the clipboard"}}),e._v(" "),o("back-button",{attrs:{to:"/"}})],1)],1)}),[],!1,null,"618bc6d8",null);t.default=component.exports}}]);